version: '3.8'

services:
  db:
    image: postgres:15-alpine # Use a specific version of postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/ # Persist data even if container stops
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432" # Map host port 5432 to container port 5432
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
        interval: 10s
        timeout: 5s
        retries: 5
    restart: unless-stopped

  api:
    build: ./api # Build the image from the Dockerfile in the ./api directory
    volumes:
      - ./api:/app # Mount the api directory for live code reloading
    ports:
      - "8000:8000" # Map host port 8000 to container port 8000
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    depends_on:
      db:
        condition: service_healthy # Wait for db to be ready before starting api
    restart: unless-stopped

volumes:
  postgres_data: # Define a named volume for PostgreSQL data persistence
